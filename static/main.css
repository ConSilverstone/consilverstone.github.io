.banner {
	text-align: center;
	color: white;
}

.wrapper {
	display: flex;
	flex-flow: row wrap;
	font-weight: bold;
	text-align: center;
	}

.wrapper > * {
	padding: 10px;
	flex: 1 100%;
	}

.header {
	padding: 10px
	}

.main {
	text-align: left;
	}

.main-email {
	text-align: left;
	}

body {
	/* Let make a custom public domain cursor for the website. 
	We need to backtrack out of this directory "../" and into media to find the .cur file.
	In case of failure to load mouse use computer default.
	*/
	cursor: url("../media/Original black custom - normal select.cur"), default;
	/* Make the display change with the window size */
	display: flex;
	/* If it must be reshaped elongate it across y-axis */
	flex-direction: column;
	padding: 2em;
	/* Display background image*/
	background-image: url("../media/images/background.png");

	/* Default page setting without modifications */
	font-family: Arial;
	font-size: 15px;
	color: #222222;
}

/*//////////////////////////*/
/* Audio and media controls */
/*//////////////////////////*/
.soundboard-button {
	/* public domain cursor for the audio controls using select variant. 
	We need to backtrack out of this directory "../" and into media to find the .cur file.
	In case of failure to load mouse use computer default.
	*/
	cursor: url("../media/Original black custom - link select.cur"), default;
}
.attachments {
	/* to display an attachment icon for emails and other media */
	width: 10%;
	aspect-ratio: 1 / 1;
}

/*///////////////////*/
/* page(s) structure */
/*///////////////////*/
/* Index Structure */
@media all and (min-width: 600px) {
	.aside {
		flex: 1 0 0;
	}
}
@media (max-width: 800px) {
	/* When reaching 600px drop text hyperlinks for taskbar */
	/* 800px is rough cutoff for mobile devices */
	.taskbar-button-in-use .button-text {
		display: none;
	}
	.taskbar-button-unused .button-text {
		display: none;
	}
}
@media all and (min-width: 800px) {
	.main {
		flex: 3 0px;
	}

	.aside-1 {
		order: 1;
	}

	.main {
		order: 2;
	}

	.taskbar-buffer-div {
		order: 4;
	}
}
/* Email Structure */
@media all and (min-width: 800px) {
	.main-email {
		flex: 3;
	}

	.aside-email {
		flex: 1;
	}

	.main-email {
		order: 2;
	}

	.taskbar-buffer-div {
		order: 4;
	}
}

/*/////////////////*/
/* page div blocks */
/*/////////////////*/
/* aside as achnor sidebar */
.aside-1 {
	/* Do not allow it to shrink to smaller than 300px, take a new line. */
	min-width: 300px;
	/* Should be no longer than 20% of screen */
	max-width: 20%;
	}
.aside-email {
		/* Do not allow it to shrink to smaller than 300px, take a new line. */
		min-width: 300px;
		/* Should be no longer than 20% of screen */
		max-width: 22%;
}
/* Taskbar buffer to prevent hidding content behind the taskbar */
.taskbar-buffer-div {
	height: 50px;
}

/*/////////////////*/
/* Taskbar nav CSS */
/*/////////////////*/
.taskbar-navbar {
	/* Flexable display for footer column and say clear of floating elements */
	content: "";
	display: flex;
	clear: both;
	font-family: "Pixelated MS Sans Serif", arial;
	font-size: 24px;
	/* Lets make it so that the bar is always displayed at bottom regardless of window size */
	position: fixed;
	/* bottom left in ensure so space to the bottom or left hand side */
	bottom: 0px;
	left: 0px;
	/* Make it fill the page width end to end */
	width: 100%;
}
.taskbar-column-edge {
	/* size related to volume of column we want on screen and the clearence for contents before
	moving down a line
	This represents the outer 2 edges that will include the clock and start bar.
	*/
	width: 20%;
	padding: 10px;
	background-color: #C2C2C2;
	border: solid 4px;
	border-left-color: white;
	border-right-color: white;
	border-top-color: white;
}
.taskbar-column-center-space {
	/* size related to volume of column we want on screen and the clearence for contents before
	This represents the "application" icons for the central 8 columns.
	moving down a line */
	width: 7.5%;
	padding: 10px;
	background-color: #c0c0c0;
	text-align: center;
	border-top: 1px solid white;
}
.taskbar-button-in-use {
	/* size related to volume of column we want on screen and the clearence for contents before
	This represents the "application" icons for the central 8 columns.
	moving down a line */
	width: 95%;
	min-width: 50%;
	height: 55%;
	padding: 10px;
	background-color: #E4E6E7;
	/* For both text and images */
	display: flex;
	align-items: center;
	justify-content: center;
	overflow: hidden;
	/* gap between elements (image and text) */
	gap: 10px;
	/* Make it look like a taskbar tab we can actually call the variables from style.css as it is defined first */
	box-shadow: var(--border-sunken-outer), var(--border-sunken-inner);
}
.taskbar-button-unused {
	/* size related to volume of column we want on screen and the clearence for contents before
	This represents the "application" icons for the central 8 columns.
	moving down a line */
	width: 95%;
	min-width: 50%;
	height: 55%;
	padding: 10px;
	background-color: #E4E6E7;
	/* For both text and images */
	display: flex;
	align-items: center;
	justify-content: center;
	overflow: hidden;
	/* gap between elements (image and text) */
	gap: 10px;
	/* Make it look like a taskbar tab we can actually call the variables from style.css as it is defined first */
	box-shadow: var(--border-raised-outer), var(--border-raised-inner);
}
/* The descendant selector is in case "taskbar-button-in-use" is used for a purpose other than the task bar*/
.taskbar-column-center-space .taskbar-button-in-use img {
	/* maintain consistant size */
	width: 100%;
	max-width: 30px;
	aspect-ratio: 1 / 1;
	object-fit: cover;
	flex-shrink: 0; /* Prevents it from shrinking smaller than 30px */
}
/* The descendant selector is in case "taskbar-button-unused" is used for a purpose other than the task bar*/
.taskbar-column-center-space .taskbar-button-unused img {
	/* maintain consistant size */
	width: 100%;
	max-width: 30px;
	aspect-ratio: 1 / 1;
	object-fit: cover;
	flex-shrink: 0; /* Prevents it from shrinking smaller than 30px */
}
.taskbar-column-edge img {
	/* This will likely just refer to the start button, we want to scale it to an appropriate size */
	width: 30%;
}

/*///////////////////////////*/
/* Javascript Clock Element  */
/* Connor Gallagher          */
/*///////////////////////////*/
#clock {
	font-size: 30px;
	/* width set to 95% to avoid touching browser edge, using % as it is more scalable */
	width: 95%;
	padding: 5px;
	position: relative;
	text-align: center;
	/* Since style.css already defined the "Pixelated MS Sans Serif" font we can actually call it here, assuming that style.css is loaded first */
	font-family: "Pixelated MS Sans Serif", arial;
	/* Create the intended box look for windows 98*/
	border-top: 2px solid black;
	border-left: 2px solid black;
	border-bottom: 2px solid white;
	border-right: 2px solid white;
}


/*structure of the boxes that appears when guessing the answer of the game*/
.box {
    display: none;
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
        }
.box-content {
  background: #fff;
  padding: 20px;
  border-radius: 5px;
  text-align: center;
}

.box2 {
  display: none;
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
}

.box-content2 {
  background: #fff;
  padding: 20px;
  border-radius: 5px;
  text-align: center;
}
/*end of the structuer of the boxes that appears when guessing the answer of the game */
