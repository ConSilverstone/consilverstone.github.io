/**
 * 98.css
 * Copyright (c) 2020 Jordan Scales <thatjdanisso.cool>
 * https://github.com/jdan/98.css/blob/main/LICENSE
 *
 * This is a derivative or Jordan's Work, used for SET08101 2024-5 Web Technologies
 * Contributors are:
 * Connor Gallagher
 * Harry Maxwell
 * Jason Stewart
 * 
 * Jordan's work will be marked with explanations of functionality.
 */

/*///////////////////////////////////////////////////////////////////////////////////////////*/
/* :root A set of variables that hold values or the result of calculations,                  */
/* reason being it is more clean to include it here rather than create it multiple times.    */
/*///////////////////////////////////////////////////////////////////////////////////////////*/
:root {
  /* Color */
  --surface: #c0c0c0;
  --button-highlight: #ffffff;
  --button-face: #dfdfdf;
  --button-shadow: #808080;
  --window-frame: #0a0a0a;
  --dialog-blue: #000080;
  --dialog-blue-light: #1084d0;
  --dialog-gray: #808080;
  --dialog-gray-light: #b5b5b5;
  --link-blue: #0000ff;

  /* Spacing */
  /* --element-spacing used both in margins and padding */
  --element-spacing: 8px;
  --grouped-button-spacing: 4px;
  --grouped-element-spacing: 6px;
  --checkbox-width: 13px;
  --checkbox-spacing: 6px;
  --range-track-height: 4px;
  --range-spacing: 10px;

  /* Some detailed computations for checkbox size and placement */
  --checkbox-total-width-precalc: var(--checkbox-width) +
    var(--checkbox-spacing);
  --checkbox-total-width: calc(var(--checkbox-total-width-precalc));
  --checkbox-left: calc(-1 * var(--checkbox-total-width-precalc));
  --checkmark-width: 7px;
  /* Modification of the checkmark position so it aligns correctly - Connor Gallagher */
  --checkmark-top: -2px;
  --checkmark-left: 3px;

  /* Borders */
  --border-width: 1px;
  --border-raised-outer: inset -1px -1px var(--window-frame),
    inset 1px 1px var(--button-highlight);
  --border-raised-inner: inset -2px -2px var(--button-shadow),
    inset 2px 2px var(--button-face);
  --border-sunken-outer: inset -1px -1px var(--button-highlight),
    inset 1px 1px var(--window-frame);
  --border-sunken-inner: inset -2px -2px var(--button-face),
    inset 2px 2px var(--button-shadow);

  /* Window borders flip button-face and button-highlight */
  --border-window-outer: inset -1px -1px var(--window-frame),
    inset 1px 1px var(--button-face);
  --border-window-inner: inset -2px -2px var(--button-shadow),
    inset 2px 2px var(--button-highlight);

  /* Field borders (checkbox, input, etc) flip window-frame and button-shadow */
  --border-field: inset -1px -1px var(--button-highlight),
    inset 1px 1px var(--button-shadow), inset -2px -2px var(--button-face),
    inset 2px 2px var(--window-frame);
}

/*////////////////////////////////////////////*/
/* Fonts designed by Jordan Scales            */
/* Comments/Explanations by Connor Gallagher  */
/*////////////////////////////////////////////*/
/* These are custom fonts to be loaded into the css for use. Treat normal text and bold text differently based on the same source */
@font-face {
    /* When calling to use this font this is what it will be called */
    font-family: "Pixelated MS Sans Serif";
    /* 
    .WOFF (Web Open Font Format) is used to deliver the stylesheet in a web readable fashion.
    It is also infused with the copyright information. The reason for woff2 is that it is an improved
    model with better compression so browsers will prefer woff 2 if it is available.
    */
    src: url("fonts/converted/ms_sans_serif.woff") format("woff");
    src: url("fonts/converted/ms_sans_serif.woff2") format("woff2");
    /* Use this for unmodified plain text */
    font-weight: normal;
    font-style: normal;
}
/* descibed as above */
@font-face {
    font-family: "Pixelated MS Sans Serif";
    src: url("fonts/converted/ms_sans_serif_bold.woff") format("woff");
    src: url("fonts/converted/ms_sans_serif_bold.woff2") format("woff2");
    /* Use this for the bold text variant */
    font-weight: bold;
    font-style: normal;
}

/*//////////////////////////////////////////////////////////////////////////////////*/
/* Jorden Scales                                                                    */
/* Basically just applying the new "Pixelated MS Sans Serif" font to everything!    */
/* removed .window from list as (though more accurate) it was hard to read - Connor */
/* .window changes regarding text made at around line 276                           */
/*//////////////////////////////////////////////////////////////////////////////////*/
button,
label,
input,
textarea,
select,
option,
ul.tree-view,
.title-bar {
    font-family: "Pixelated MS Sans Serif", Arial;
    /* We want that jagged early 2000s pixels, to tell the browser to leave the text alone! */
    -webkit-font-smoothing: none;
    font-size: 20px;
}

button,
input[type="submit"],
input[type="reset"] {
  box-sizing: border-box;
  border: none;
  background: var(--surface);
  box-shadow: var(--border-raised-outer), var(--border-raised-inner);
  border-radius: 0;

  min-width: 75px;
  min-height: 23px;
  padding: 0 12px;
}

.vertical-bar {
  width: 4px;
  height: 20px;
  background: #c0c0c0;
  box-shadow: var(--border-raised-outer), var(--border-raised-inner);
}

button:not(:disabled):active,
input[type="submit"]:not(:disabled):active,
input[type="reset"]:not(:disabled):active {
  box-shadow: var(--border-sunken-outer), var(--border-sunken-inner);
  padding: 2px 11px 0 13px;
}

@media (not(hover)) {
  button:not(:disabled):hover,
  input[type="submit"]:not(:disabled):hover,
  input[type="reset"]:not(:disabled):hover {
    box-shadow: var(--border-sunken-outer), var(--border-sunken-inner);
  }
}

button:focus,
input[type="submit"]:focus,
input[type="reset"]:focus {
  outline: 1px dotted #000000;
  outline-offset: -4px;
}

button::-moz-focus-inner,
input[type="submit"]::-moz-focus-inner,
input[type="reset"]::-moz-focus-inner {
  border: 0;
}

button:disabled,
input[type="submit"]:disabled,
input[type="reset"]:disabled,
:disabled + label {
  text-shadow: 1px 1px 0 var(--button-highlight);
}

.window {
  box-shadow: var(--border-window-outer), var(--border-window-inner);
  background: var(--surface);
  padding: 3px;
}

/*///////////////////////////////////////////////////////////*/
/* Jordan Scales title-bar css.                              */
/* Comments/Explanations/Modifications by Connor Gallagher   */
/*///////////////////////////////////////////////////////////*/

/* This is the header to every windows 98 window, 
banner is also basically a window with a big .title-bar and small window */
.title-bar {
  /* We can use an in built function called linear gradient to calculate a color range from dark blue to light */
  background: linear-gradient(
    /* 90 degrees to flip it vertically so the colour travels from left to right */
    90deg,
    /* Use :root variables */
    var(--dialog-blue),
    var(--dialog-blue-light)
  );
  padding: 3px 2px 3px 3px;
  /* Stretch as needed (Flexbox) */
  display: flex;
  /* Push items to edges left - centre - right */
  /* Helps when introducing the button elements (close, minimise, maximise, etc.) */
  justify-content: space-between;
  /* Put text, media etc. in the center */
  align-items: center;
}
.title-bar-text {
  /* Hopefully self explanatory, if we use text in the window header use these variables */ 
  font-weight: bold;
  color: white;
  letter-spacing: 0;
  /* Text didn't really touch edges in windows 98 to pull the text right from left edge. */
  margin-right: 24px;
}
.title-bar-controls {
  /* Let all buttons bend with the windows if page is resized */
  display: flex;
}
/* Edit made here */
.title-bar-controls button {
  /* Let use the public domain cursor for the buttons. 
	We need to backtrack out of this directory "../" and into media to find the .cur file.
	In case of failure to load mouse use computer default.
	*/
    cursor: url("../media/Original black custom - normal select.cur"), default;
    /* Let the svg images be touching the borders inside container, fit to size of image */
    padding: 0;
    display: block;
    min-width: 16px;
    min-height: 14px;
}
.title-bar-controls button:active {
  padding: 0;
}
.title-bar-controls button:focus {
  outline: none;
}
.title-bar-controls button[aria-label="Minimize"] {
  background-image: url("./icon/minimize.svg");
  background-repeat: no-repeat;
  background-position: bottom 3px left 4px;
}
.title-bar-controls button[aria-label="Maximize"] {
  background-image: url("./icon/maximize.svg");
  background-repeat: no-repeat;
  background-position: top 2px left 3px;
}
.title-bar-controls button[aria-label="Restore"] {
  background-image: url("./icon/restore.svg");
  background-repeat: no-repeat;
  background-position: top 2px left 3px;
}
.title-bar-controls button[aria-label="Help"] {
  background-image: url("./icon/help.svg");
  background-repeat: no-repeat;
  background-position: top 2px left 5px;
}
.title-bar-controls button[aria-label="Close"] {
  margin-left: 2px;
  background-image: url("./icon/close.svg");
  background-repeat: no-repeat;
  background-position: top 3px left 4px;
}

/*////////////////////////////////*/
/* Connor's window additions      */
/*////////////////////////////////*/
.window-body {
  /* Keep the window-body away from unrelated elements */
  margin: var(--element-spacing);
}
/* Connor Gallagher Addition */
.window h1, h2, h3, h4, h5, h6, p {
  /* text was touching window border, this is to fix that */
  padding-left: var(--element-spacing);
}
.window a {
  /* Nice big readable hyperlinks, need to include font family as window would use arial normally */
  font-family: "Pixelated MS Sans Serif", Arial;
  /* Keep the jagged look */
  -webkit-font-smoothing: none;
  font-size: 20px;
  /* Make sure the text does not touch the border here as well */
  padding-left: var(--element-spacing);
}
a {
  /* Lets change the cursor if it hovers over a link.
  We need to backtrack out of this directory "../" and into media to find the .cur file.
  In case of failure to load mouse use computer default. - Connor
  */
  cursor: url("../media/Original black custom - link select.cur"), default;
}

/*//////////////////////////////////////////////////*/
/* Jordan Scales toggle elements css.               */
/* Used in checkbox but was designed for            */
/* options, groupbox, and textboxes as well         */
/*//////////////////////////////////////////////////*/

.field-row {
  display: flex;
  align-items: center;
}
[class^="field-row"] + [class^="field-row"] {
  margin-top: var(--grouped-element-spacing);
}
.field-row > * + * {
  margin-left: var(--grouped-element-spacing);
}
.field-row-stacked {
  display: flex;
  flex-direction: column;
}
.field-row-stacked * + * {
  margin-top: var(--grouped-element-spacing);
}
label {
  display: inline-flex;
  align-items: center;
}

/*//////////////////////////////////////////////////*/
/* Jordan Scales checkbox css.                      */
/*//////////////////////////////////////////////////*/
input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  margin: 0;
  background: 0;
  position: fixed;
  opacity: 0;
  border: none;
}
input[type="checkbox"] + label {
  line-height: 13px;
}
input[type="checkbox"]:focus + label {
  outline: 1px dotted #000000;
}
input[type="checkbox"] + label {
  position: relative;
  margin-left: var(--checkbox-total-width);
}
input[type="checkbox"] + label::before {
  content: "";
  position: absolute;
  left: calc(-1 * (var(--checkbox-total-width-precalc)));
  display: inline-block;
  width: var(--checkbox-width);
  height: var(--checkbox-width);
  background: var(--button-highlight);
  box-shadow: var(--border-field);
  margin-right: var(--checkbox-spacing);
}
input[type="checkbox"]:active + label::before {
  background: var(--surface);
}
input[type="checkbox"]:checked + label::after {
  content: "";
  display: block;
  width: var(--checkmark-width);
  height: var(--checkmark-width);
  position: absolute;
  top: var(--checkmark-top);
  left: calc(
    -1 * (var(--checkbox-total-width-precalc)) + var(--checkmark-left)
  );
  background: url("./icon/checkmark.svg");
}
input[type="checkbox"][disabled] + label::before {
  background: var(--surface);
}
input[type="checkbox"][disabled]:checked + label::after {
  background: url("./icon/checkmark-disabled.svg");
}

a {
  color: var(--link-blue);
}

a:focus {
  outline: 1px dotted var(--link-blue);
}

/*////////////////////////////////////////////////*/
/* Jordan Scales scrollbar css.                   */
/* As explained by Connor Gallagher via comments. */
/*////////////////////////////////////////////////*/

/* Let's use the webkit engine to render elements inside the users browser */
::-webkit-scrollbar {
    /* width of the "thumb" (or bar) itself */
    width: 16px;
}
::-webkit-scrollbar:horizontal {
    /* height of the "thumb" (or bar) itself */
    height: 17px;
}
/* Where the corner meets vertical and horzontal basically make it a square space */
::-webkit-scrollbar-corner {
  /* :root css variable for button face */
  background: var(--button-face);
}
::-webkit-scrollbar-track {
    /* The rail that the bar rides on which will go behind the image */
    background-image: url("./icon/scrollbar-background.svg");
}
::-webkit-scrollbar-thumb {
    /* :root css variable for face colour */
    background-color: var(--button-face);
    /* Style the "thumb" bar to look 3D, passing in :root css variables */
    box-shadow: var(--border-raised-outer), var(--border-raised-inner);
}
/* Select the "arrows" for webkit supported browsers like chrome and ensure they are rendered on screen */
::-webkit-scrollbar-button:horizontal:start:decrement,
::-webkit-scrollbar-button:horizontal:end:increment,
::-webkit-scrollbar-button:vertical:start:decrement,
::-webkit-scrollbar-button:vertical:end:increment {
    /* Treat as a part of the page layout, ensure it doesn't clip out of page bounds*/
    display: block;
}
/* Scrollbar Icons for all directions which maintain size for 17 pixels */
::-webkit-scrollbar-button:vertical:start {
  height: 17px;
  background-image: url("./icon/button-up.svg");
}
::-webkit-scrollbar-button:vertical:end {
  height: 17px;
  background-image: url("./icon/button-down.svg");
}
::-webkit-scrollbar-button:horizontal:start {
  width: 16px;
  background-image: url("./icon/button-left.svg");
}
::-webkit-scrollbar-button:horizontal:end {
  width: 16px;
  background-image: url("./icon/button-right.svg");
}

/*///////////////////////////////////////////////////////*/
/* Jordan Scales panel table css as used in email-*.html */
/* As explained by Connor Gallagher via comments.        */
/*///////////////////////////////////////////////////////*/
.sunken-panel {
  box-sizing: border-box;
  border: 2px groove transparent;
  border-image: svg-load("./icon/sunken-panel-border.svg") 2;
  overflow: auto;
  background-color: #fff;
}
table {
  border-collapse: collapse;
  position: relative;
  text-align: left;
  white-space: nowrap;
  background-color: #fff;
}
table > thead > tr > * {
  position: sticky;
  top: 0;
  height: 17px;
  box-shadow: var(--border-raised-outer), var(--border-raised-inner);
  background: var(--surface);
  box-sizing: border-box;
  font-weight: normal;
  padding: 0 var(--grouped-element-spacing);
}
table.interactive > tbody > tr {
  cursor: pointer;
}
table > tbody > tr.highlighted {
  color: #fff;
  background-color: var(--dialog-blue);
}
table > tbody > tr > * {
  padding: 0 var(--grouped-element-spacing);
  height: 14px;
}
